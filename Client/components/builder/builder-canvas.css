/* Custom React Flow Styling for ChasmX - ULTRA VISIBLE ARROWS */

/* CRITICAL: Make edges THICK and VISIBLE */
.react-flow__edge-path {
  stroke: rgb(var(--brand-500)) !important;
  stroke-width: 4px !important;
}

/* Arrow marker styling - Make arrows LARGE and clearly visible */
.react-flow__arrowhead,
.react-flow__arrowhead polyline,
.react-flow__arrowhead polygon {
  fill: rgb(var(--brand-500)) !important;
  stroke: rgb(var(--brand-500)) !important;
  stroke-width: 2px !important;
}

/* Force ALL marker types to be visible */
marker,
marker path,
marker polyline,
marker polygon {
  fill: rgb(var(--brand-500)) !important;
  stroke: rgb(var(--brand-500)) !important;
  stroke-width: 1px !important;
}

/* SVG marker definitions */
defs marker path {
  fill: #3b82f6 !important;
  stroke: none !important;
}

.react-flow__edge.animated path {
  stroke-dasharray: 8 4 !important;
  animation: dashdraw 0.8s linear infinite;
}

@keyframes dashdraw {
  to {
    stroke-dashoffset: -24;
  }
}

.react-flow__edge .react-flow__edge-path {
  stroke: rgb(var(--brand-500)) !important;
  stroke-width: 4px !important;
  stroke-linecap: round !important;
  stroke-linejoin: round !important;
}

/* Selected edge styling - EVEN THICKER */
.react-flow__edge.selected .react-flow__edge-path {
  stroke: rgb(var(--brand-600)) !important;
  stroke-width: 6px !important;
}

.react-flow__edge.selected .react-flow__arrowhead {
  fill: #2563eb !important;
  stroke: #2563eb !important;
  stroke-width: 3px !important;
}

/* Connection line (while dragging) */
.react-flow__connection-path {
  stroke: rgb(var(--brand-500)) !important;
  stroke-width: 3px !important;
  stroke-dasharray: 5, 5;
  animation: dash 20s linear infinite;
}

@keyframes dash {
  to {
    stroke-dashoffset: -100;
  }
}

/* Handle styling - Simple dots without hover effects */
.react-flow__handle {
  width: 14px !important;
  height: 14px !important;
  background: rgb(var(--brand-500)) !important;
  border: 2px solid white !important;
  box-shadow: 0 0 0 1px rgb(var(--brand-500)) !important;
  cursor: crosshair !important;
  z-index: 10 !important;
  transition: transform .12s ease, box-shadow .12s ease;
}

.react-flow__handle-connecting {
  background: rgb(var(--success)) !important;
  box-shadow: 0 0 0 2px rgba(var(--success), 0.6) !important;
  animation: pulse 0.5s ease-in-out infinite;
}

.react-flow__handle-valid {
  background: rgb(var(--success)) !important;
  box-shadow: 0 0 0 3px rgba(var(--success),0.12), 0 6px 18px rgba(16,185,129,0.08) !important;
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.3);
    opacity: 0.8;
  }
}

/* Dark mode support */
.dark .react-flow__edge-path {
  stroke: rgb(var(--brand-500)) !important;
}

.dark .react-flow__arrowhead {
  fill: #60a5fa !important;
}

.dark .react-flow__connection-path {
  stroke: #60a5fa !important;
}

/* Enhanced node styling */
.react-flow__node {
  cursor: grab;
  transition: box-shadow .12s ease, transform .08s ease, border-color .12s ease;
}

.react-flow__node:active {
  cursor: grabbing;
}

.react-flow__node.selected {
  box-shadow: 0 6px 20px rgba(var(--brand-500), 0.14) !important;
  border-color: rgb(var(--brand-500)) !important;
  transform: translateY(-2px);
}

/* Minimap styling */
.react-flow__minimap {
  background-color: #f8fafc;
  border: 1px solid #e2e8f0;
}

.dark .react-flow__minimap {
  background-color: #1e293b;
  border: 1px solid #334155;
}

/* Control buttons styling */
.react-flow__controls-button {
  background: white;
  border: 1px solid #e2e8f0;
  color: #0f172a;
}

.react-flow__controls-button:hover {
  background: #f1f5f9;
  border-color: rgb(var(--brand-500));
}

.dark .react-flow__controls-button {
  background: #1e293b;
  border-color: #334155;
  color: #f1f5f9;
}

.dark .react-flow__controls-button:hover {
  background: #334155;
  border-color: rgb(var(--brand-500));
}

/* Component Library Scrolling */
.component-library-scroll {
  scrollbar-width: thin;
  scrollbar-color: #cbd5e1 #f1f5f9;
}

.component-library-scroll::-webkit-scrollbar {
  width: 8px;
}

.component-library-scroll::-webkit-scrollbar-track {
  background: #f1f5f9;
  border-radius: 4px;
}

.component-library-scroll::-webkit-scrollbar-thumb {
  background: #cbd5e1;
  border-radius: 4px;
}

.component-library-scroll::-webkit-scrollbar-thumb:hover {
  background: #94a3b8;
}

/* Node Context Menu Animation */
@keyframes contextMenuSlideIn {
  from {
    opacity: 0;
    transform: translateY(-5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.node-context-menu {
  animation: contextMenuSlideIn 0.15s ease-out;
}

/* Improved Node Hover Effect */
.react-flow__node.selected .react-flow__handle {
  background: rgb(var(--success)) !important;
  box-shadow: 0 0 0 2px rgba(var(--success),0.18);
}

/* Delete Button Pulse on Select */
@keyframes buttonPulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

.node-delete-btn-selected {
  animation: buttonPulse 2s ease-in-out infinite;
}

/* Removed duplicate handle styling - see above for main styling */

/* Connection Line Animation */
.react-flow__connectionline {
  stroke: rgb(var(--brand-500)) !important;
  stroke-width: 4px !important;
  animation: connectionPulse 1s ease-in-out infinite;
}

@keyframes connectionPulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

/* Dragging component feedback */
.component-dragging {
  opacity: 0.5;
  transform: rotate(2deg);
}

/* Node selection ring */
.react-flow__node.selected {
  box-shadow: 0 6px 20px rgba(var(--brand-500), 0.14) !important;
}

/* Edge selection */
.react-flow__edge.selected .react-flow__edge-path {
  stroke: rgb(var(--success)) !important;
  stroke-width: 5px !important;
}

/* Prevent text selection during drag */
.react-flow__pane {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

/* Fix transparency for dialogs and sheets */
/* [data-slot="dialog-content"],
[data-slot="sheet-content"] {
  opacity: 1 !important;
  background-color: var(--card) !important;
} */

.dark [data-slot="dialog-content"],
.dark [data-slot="sheet-content"] {
  background-color: var(--card) !important;
}

/* Ensure scrolling in component library */
.component-library-container {
  overflow-y: auto;
  max-height: calc(100vh - 200px);
}

/* Node quick toolbar */
.node-quick-toolbar {
  position: absolute;
  top: 6px;
  right: 6px;
  display: flex;
  gap: 6px;
  z-index: 20;
}

/* Minimum hit target for interactive items inside nodes */
.node-action-btn {
  width: 34px;
  height: 34px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 8px;
}

